package ability;

import com.ftn.sbnz.model.CharSheet;
import com.ftn.sbnz.model.PathInLife;
import com.ftn.sbnz.model.Interest;
import com.ftn.sbnz.model.WayOfLife;
import com.ftn.sbnz.model.BackgroundParams;
import com.ftn.sbnz.model.Background;
import com.ftn.sbnz.model.Ability;
import com.ftn.sbnz.model.AbilityContainer;
import java.util.ArrayList;
import java.util.Arrays
import java.util.List;
import java.util.HashMap;

dialect  "mvel"

query isPartOf(String _part, String greater_whole)
    AbilityContainer(_part, greater_whole;)
    or
    ( AbilityContainer(_part, x;) and isPartOf(x, greater_whole;) )
end

// artificier Constitution, Intelligence
rule "is ARTIFICIER DEX"
no-loop true
    when
        isPartOf("DEXTERITY", "ARTIFICIER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 13)};
        modify($map){put(Ability.INTELLIGENCE, 15)};
        modify($map){put(Ability.WISDOM, 12)};
        modify($map){put(Ability.CHARISMA, 10)};
        System.out.println("rule");
end
rule "is ARTIFICIER INT"
no-loop true
    when
        isPartOf("INTELLIGENCE", "ARTIFICIER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 15)};
        modify($map){put(Ability.WISDOM, 10)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end

rule "is ARTIFICIER WIS"
no-loop true
    when
        isPartOf("WISDOM", "ARTIFICIER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 14)};
        modify($map){put(Ability.INTELLIGENCE, 15)};
        modify($map){put(Ability.WISDOM, 12)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end

// barbarian strength
rule "is BARBARIAN STR"
no-loop true
    when
        isPartOf("STRENGTH", "BARBARIAN";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 15)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 10)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end

// bard Dexterity, Charisma
rule "is BARD DEXTERITY"
no-loop true
    when
        isPartOf("DEXTERITY", "BARD";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 13)};
        modify($map){put(Ability.INTELLIGENCE, 12)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end
rule "is BARD CHARISMA"
no-loop true
    when
        isPartOf("CHARISMA", "BARD";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end

rule "is BARD INTELLIGENCE"
no-loop true
    when
        isPartOf("INTELLIGENCE", "BARD";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 13)};
        modify($map){put(Ability.INTELLIGENCE, 12)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end

rule "is BARD WISDOM"
no-loop true
    when
        isPartOf("WISDOM", "BARD";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 13)};
        modify($map){put(Ability.INTELLIGENCE, 12)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end

// CLERIC WISDOM, CHARISMA
rule "is CLERIC WISDOM"
no-loop true
    when
        isPartOf("WISDOM", "CLERIC";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 14)};
        modify($map){put(Ability.DEXTERITY, 10)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 15)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end
rule "is CLERIC CHARISMA"
no-loop true
    when
        isPartOf("CHARISMA", "CLERIC";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 12)};
        modify($map){put(Ability.INTELLIGENCE, 14)};
        modify($map){put(Ability.WISDOM, 15)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end

// DRUID WISDOM, CHARISMA
rule "is DRUID WISDOM"
no-loop true
    when
        isPartOf("WISDOM", "DRUID";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 12)};
        modify($map){put(Ability.INTELLIGENCE, 14)};
        modify($map){put(Ability.WISDOM, 15)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end
rule "is DRUID INTELLIGENCE"
no-loop true
    when
        isPartOf("INTELLIGENCE", "DRUID";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 10)};
        modify($map){put(Ability.WISDOM, 15)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end

// FIGHTER STRENGTH, CONSTITUTION
rule "is FIGHTER STRENGTH"
no-loop true
    when
        isPartOf("STRENGTH", "FIGHTER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 15)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 14)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 10)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end
rule "is FIGHTER DEXTERITY"
no-loop true
    when
        isPartOf("DEXTERITY", "FIGHTER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 10)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 14)};
        System.out.println("rule");
end

// MONK STRENGTH, DEXTERITY
rule "is MONK STRENGTH"
no-loop true
    when
        isPartOf("STRENGTH", "MONK";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 15)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end
rule "is MONK DEXTERITY"
no-loop true
    when
        isPartOf("DEXTERITY", "MONK";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 10)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 14)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 15)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end

// PALADIN WISDOM, CHARISMA
rule "is PALADIN WISDOM"
no-loop true
    when
        isPartOf("WISDOM", "PALADIN";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 12)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 14)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 14)};
        System.out.println("rule");
end
rule "is PALADIN CHARISMA"
no-loop true
    when
        isPartOf("CHARISMA", "PALADIN";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 15)};
        modify($map){put(Ability.DEXTERITY, 8)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 18)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end

// RANGER STRENGTH, DEXTERITY
rule "is RANGER STRENGTH"
no-loop true
    when
        isPartOf("STRENGTH", "RANGER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 12)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 15)};
        modify($map){put(Ability.CHARISMA, 13)};
        System.out.println("rule");
end
rule "is RANGER DEXTERITY"
no-loop true
    when
        isPartOf("DEXTERITY", "RANGER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 10)};
        modify($map){put(Ability.WISDOM, 15)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end

// ROGUE DEXTERITY, INTELLIGENCE
rule "is ROGUE DEXTERITY"
no-loop true
    when
        isPartOf("DEXTERITY", "ROGUE";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end
rule "is ROGUE INTELLIGENCE"
no-loop true
    when
        isPartOf("INTELLIGENCE", "ROGUE";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 14)};
        modify($map){put(Ability.INTELLIGENCE, 15)};
        modify($map){put(Ability.WISDOM, 10)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end
rule "is ROGUE CHARISMA"
no-loop true
    when
        isPartOf("CHARISMA", "ROGUE";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 14)};
        modify($map){put(Ability.INTELLIGENCE, 10)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end

// SORCERER CONSTITUTION, CHARISMA
rule "is SORCERER CONSTITUTION"
no-loop true
    when
        isPartOf("CONSTITUTION", "SORCERER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 8)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 10)};
        modify($map){put(Ability.WISDOM, 14)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end
rule "is SORCERER CHARISMA"
no-loop true
    when
        isPartOf("CHARISMA", "SORCERER";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 10)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end

// WARLOCK WISDOM, CHARISMA
rule "is WARLOCK WISDOM"
no-loop true
    when
        isPartOf("WISDOM", "WARLOCK";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 14)};
        modify($map){put(Ability.INTELLIGENCE, 10)};
        modify($map){put(Ability.WISDOM, 10)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end
rule "is WARLOCK CHARISMA"
no-loop true
    when
        isPartOf("CHARISMA", "WARLOCK";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 8)};
        modify($map){put(Ability.WISDOM, 10)};
        modify($map){put(Ability.CHARISMA, 15)};
        System.out.println("rule");
end

// WIZARD INTELLIGENCE, WISDOM
rule "is WIZARD INTELLIGENCE"
no-loop true
    when
        isPartOf("INTELLIGENCE", "WIZARD";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 14)};
        modify($map){put(Ability.CONSTITUTION, 14)};
        modify($map){put(Ability.INTELLIGENCE, 15)};
        modify($map){put(Ability.WISDOM, 12)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end
rule "is WIZARD WISDOM"
no-loop true
    when
        isPartOf("WISDOM", "WIZARD";)
        $map: HashMap()
    then
        modify($map){put(Ability.STRENGTH, 8)};
        modify($map){put(Ability.DEXTERITY, 15)};
        modify($map){put(Ability.CONSTITUTION, 15)};
        modify($map){put(Ability.INTELLIGENCE, 15)};
        modify($map){put(Ability.WISDOM, 8)};
        modify($map){put(Ability.CHARISMA, 8)};
        System.out.println("rule");
end

